@using TaskManager.Dto.Categories.Response
@using TaskManager.Dto.Tasks.Response
@model IEnumerable<CategoryDto>
@{
    ViewBag.Title = "Tasks";
    Layout = "~/Views/Shared/_Layout_task.cshtml";
}
<link href="~/CSS/StyleTaskHome.css" rel="stylesheet" />

<div class='app'>
    <main class='project'>
        <div class='project-info'>
            <h1>Homepage</h1>
        </div>
        <div class='project-tasks'>
            <div class='project-column'>
                <div class='project-column-heading'>
                    <h2 class='project-column-heading__title'>Need make</h2>
                </div>

                @foreach (CategoryDto category in Model)
                {
                    foreach (TaskDto task in category.Tasks)
                    {
                        @if (task.Status == Status.Active)
                        {
                            <div id="taskElem" class='task' draggable='true' data-task-id="@task.Id">
                                <div class='task__tags'>
                                    <span class='task__tag' style="background-color:@category.Color">@category.Name</span>
                                    <div class="dropdown">
                                        <button class="mainmenubtn"></button>
                                        <div class="dropdown-child">
                                            <a asp-action="TaskDetails" asp-controller="Task" asp-route-taskId="@task.Id">Details</a>
                                            <a asp-action="TaskUpdate" asp-controller="Task" asp-route-taskId="@task.Id">Edit</a>
                                            <form method="post" asp-controller="Task" asp-action="DeleteTaskPost" asp-route-taskId="@task.Id">
                                                <button type="submit">Delete</button>
                                            </form>
                                            <form method="post" asp-controller="Task" asp-action="ChangeStatusTask" asp-route-taskId="@task.Id" asp-route-newStatus="@Status.Done">
                                                <button type="submit">Done</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                                <p>@task.Title</p>
                                <div class='task__stats'>
                                    <span><time>@task.FinishTime.ToString("yyyy-MM-dd")</time></span>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
            <div class='project-column'>
                <div class='project-column-heading'>
                    <h2 class='project-column-heading__title'>Done</h2>
                </div>

                @foreach (CategoryDto category in Model)
                {
                    foreach (TaskDto task in category.Tasks)
                    {
                        @if (task.Status == Status.Done)
                        {
                            <div class='task' draggable='true'>
                                <div class='task__tags'>
                                    <span class='task__tag' style="background-color:@category.Color">@category.Name</span>
                                    <div class="dropdown">
                                        <button class="mainmenubtn"></button>
                                        <div class="dropdown-child">
                                            <a asp-action="TaskDetails" asp-controller="Task" asp-route-taskId="@task.Id">Details</a>
                                            <a asp-action="TaskUpdate" asp-controller="Task" asp-route-taskId="@task.Id">Edit</a>
                                            <form method="post" asp-controller="Task" asp-action="DeleteTaskPost" asp-route-taskId="@task.Id">
                                                <button type="submit">Delete</button>
                                            </form>
                                            <form method="post" asp-controller="Task" asp-action="ChangeStatusTask" asp-route-taskId="@task.Id" asp-route-newStatus="@Status.Active">
                                                <button type="submit">Need Make</button>
                                            </form>

                                        </div>
                                    </div>
                                </div>
                                <p>@task.Title</p>
                                <div class='task__stats'>
                                    <span><time>@task.FinishTime.ToString("dd-MM-yyyy")</time></span>
                                </div>
                            </div>
                        }
                    }
                }

            </div>

            <div class='project-column'>
                <div class='project-column-heading'>
                    <h2 class='project-column-heading__title'>Overdue</h2>
                </div>

                @foreach (CategoryDto category in Model)
                {
                    foreach (TaskDto task in category.Tasks)
                    {
                        @if (task.Status == Status.Overdue)
                        {
                            <div class='task' draggable='true'>
                                <div class='task__tags'>
                                    <span class='task__tag' style="background-color:@category.Color">@category.Name</span>
                                    <div class="dropdown">
                                        <button class="mainmenubtn"></button>
                                        <div class="dropdown-child">
                                            <a asp-action="TaskDetails" asp-controller="Task" asp-route-taskId="@task.Id">Details</a>
                                            <a asp-action="TaskUpdate" asp-controller="Task" asp-route-taskId="@task.Id">Edit</a>
                                            <form method="post" asp-controller="Task" asp-action="DeleteTaskPost" asp-route-taskId="@task.Id">
                                                <button type="submit">Delete</button>
                                            </form>

                                        </div>
                                    </div>
                                </div>
                                <p>@task.Title</p>
                                <div class='task__stats'>
                                    <span><time>@task.FinishTime.ToString("yyyy-MM-dd")</time></span>
                                </div>
                            </div>
                        }
                    }
                }

            </div>

        </div>
    </main>
    <aside class='task-details'>
        <div class='tag-progress'>
            <h2>Task Progress</h2>
            @foreach (CategoryDto category in Model)
            {
                var countDoneTasks = category.Tasks?.Where(temp => temp.Status == Status.Done).Count();
                var countTask = @category.Tasks?.Where(temp => temp.Status != Status.Overdue).Count();

                if ((countTask + countDoneTasks) != 0)
                {
                    <div class='tag-progress'>
                        <p>@category.Name <span>@countDoneTasks/@countTask</span></p>
                        <progress class="progress" style="background-color:@category.Color" max="@countTask" value="@countDoneTasks"> @countDoneTasks </progress>
                    </div>
                }
            }
        </div>
    </aside>
</div>

<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        var dragSrcEl = null;

        function handleDragStart(e) {
            this.style.opacity = '0.1';
            this.style.border = '3px dashed #c4cad3';

            dragSrcEl = this;
            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('text/html', this.innerHTML);
        }
        function handleDragOver(e) {
            if (e.preventDefault) {
                e.preventDefault();
            }
            e.dataTransfer.dropEffect = 'move';

            return false;
        }
        function handleDragEnter(e) {
            this.classList.add('task-hover');
        }
        function handleDragLeave(e) {
            this.classList.remove('task-hover');
        }
        function handleDrop(e) {
            if (e.stopPropagation) {
                e.stopPropagation();
            }

            if (dragSrcEl != this) {
                dragSrcEl.innerHTML = this.innerHTML;
                this.innerHTML = e.dataTransfer.getData('text/html');
            }

            return false;
        }
        function handleDragEnd(e) {
            this.style.opacity = '1';
            this.style.border = 0;

            items.forEach(function (item) {
                item.classList.remove('task-hover');
            });
        }
        let items = document.querySelectorAll('.task');
        items.forEach(function (item) {
            item.addEventListener('dragstart', handleDragStart, false);
            item.addEventListener('dragenter', handleDragEnter, false);
            item.addEventListener('dragover', handleDragOver, false);
            item.addEventListener('dragleave', handleDragLeave, false);
            item.addEventListener('drop', handleDrop, false);
            item.addEventListener('dragend', handleDragEnd, false);
        });
    });
</script>
